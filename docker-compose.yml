version: '3.9'

services:
  db:
    image: postgres:16-alpine
    container_name: vg_db
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-notifications}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 5s
      timeout: 3s
      retries: 10

  nats:
    image: nats:2.10-alpine
    container_name: vg_nats
    command: ["-js"]
    ports:
      - "4222:4222"   # client
      - "8222:8222"   # monitoring
    healthcheck:
      test: ["CMD", "nats-server", "--version"]
      interval: 10s
      timeout: 3s
      retries: 10

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: vg_api
    environment:
      - PORT=${PORT:-3000}
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=${DB_PORT:-5432}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_NAME=${DB_NAME:-notifications}
      - NATS_URL=${NATS_URL:-nats://nats:4222}
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
      nats:
        condition: service_started

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    container_name: vg_worker
    environment:
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=${DB_PORT:-5432}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_NAME=${DB_NAME:-notifications}
      - NATS_URL=${NATS_URL:-nats://nats:4222}
    depends_on:
      db:
        condition: service_healthy
      nats:
        condition: service_started

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: vg_frontend
    ports:
      - "5173:80"
    depends_on:
      - api

volumes:
  db_data:


